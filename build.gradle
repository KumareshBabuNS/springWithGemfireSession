buildscript {
	ext {
		springBootVersion = '1.3.3.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot' 

jar {
	baseName = 'demo'
	version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {

	maven { url 'https://repo.spring.io/libs-release' }
	maven { url 'https://repo.spring.io/libs-snapshot' }
	mavenLocal()
	mavenCentral()
	maven {
		url 'http://repo.spring.io/gemstone-release-cache/'
	}
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.data:spring-data-gemfire:1.8.1.RELEASE')
	compile('org.springframework.session:spring-session:1.2.0.LOCAL')
	compile("org.springframework.session:spring-session-data-gemfire:1.2.0.LOCAL")

	testCompile(
			"org.springframework.boot:spring-boot-starter-test:$springBootVersion",
//			"org.springframework:spring-test:$springBootVersion",
			'junit:junit:4.11',
			'org.hamcrest:hamcrest-library:1.3',
			'com.jayway.restassured:rest-assured:2.5.0',
			'com.jayway.restassured:json-schema-validator:2.5.0',
			'com.jayway.jsonpath:json-path:2.0.0',
	)
}


eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.12'
}
